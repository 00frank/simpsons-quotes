{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Loader","className","App","props","state","error","isLoaded","q","fetch","then","data","json","setState","console","log","this","src","image","alt","character","quote","onClick","window","location","reload","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAgDA,SAASA,IACP,OACE,qBAAKC,UAAU,WAIJC,M,kDAlDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,EAAG,IALY,E,gEAQE,IAAD,OAClBC,MAAM,oDACHC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MACC,SAACF,GACC,EAAKK,SAAS,CAAEN,UAAU,EAAMC,SAElC,SAACF,GACCQ,QAAQC,IAAI,sBAAsBT,GAClC,EAAKO,SAAS,CAAEN,UAAU,EAAOD,e,+BAG/B,IAAD,EACwBU,KAAKX,MAA5BC,EADD,EACCA,MAAOC,EADR,EACQA,SAAUC,EADlB,EACkBA,EACzB,OAAIF,EACK,sBAAKJ,UAAU,QAAf,oBAA+BI,KAC5BC,EAOR,sBAAKL,UAAU,OAAf,UACE,qBAAKA,UAAU,SAAf,SACE,qBAAKe,IAAKT,EAAE,GAAGU,MAAOC,IAAKX,EAAE,GAAGY,cAElC,oBAAIlB,UAAU,YAAd,SAA2BM,EAAE,GAAGY,YAChC,mBAAGlB,UAAU,QAAb,SAAsBM,EAAE,GAAGa,QAC3B,wBAAQnB,UAAU,WAAWoB,QAAS,kBAAMC,OAAOC,SAASC,UAA5D,iCAXF,qBAAKvB,UAAU,UAAf,SACE,cAACD,EAAD,U,GA5BQyB,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a705eb1d.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      error: null,\n      isLoaded: false,\n      q: []\n    }\n  }\n  componentDidMount() {\n    fetch('https://simpsons-quotes-api.herokuapp.com/quotes')\n      .then(data => data.json())\n      .then(\n        (q) => {\n          this.setState({ isLoaded: true, q })\n        },\n        (error) => {\n          console.log('mostrando el error:',error);\n          this.setState({ isLoaded: false, error })\n        })\n  }\n  render() {\n    const { error, isLoaded, q } = this.state\n    if (error) {\n      return <div className=\"error\">Error: {error}</div>\n    } else if (!isLoaded) {\n      return (\n        <div className=\"loading\">\n          <Loader />\n        </div>);\n    } else {\n      return (\n        <div className=\"main\">\n          <div className=\"boxImg\">\n            <img src={q[0].image} alt={q[0].character} />\n          </div>\n          <h1 className=\"character\">{q[0].character}</h1>\n          <p className=\"quote\">{q[0].quote}</p>\n          <button className=\"getQuote\" onClick={() => window.location.reload()}>Get random quote</button>\n        </div>\n      )\n    }\n  }\n}\n\nfunction Loader() {\n  return (\n    <div className=\"loader\"></div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}